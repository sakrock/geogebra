# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Siyah\u0131>, <Siyah\u0131>, ... ]
AffineRatio=AfinCevrilm\u0259si
AffineRatio.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259> ]
Angle=Bucaq
AngularBisector=BucaqT\u0259nböl\u0259ni
AngularBisector.Syntax=[ <X\u0259tt>, <X\u0259tt> ]\n[ <Nöqt\u0259t>, <Nöqt\u0259>, <Nöqt\u0259t> ]
Append=\u018flav\u0259Et
ApplyMatrix.Syntax=[ <Matris>, <Obyekt> ]
AreCollinear=Kollinear
AreCollinear.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259> ]
AreConcurrent.Syntax=[ <X\u0259tt>, <X\u0259tt>, <X\u0259tt> ]
AreConcyclic.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259> ]
AreCongruent.Syntax=[ <Obyekt>, <Obyekt> ]
AreEqual=B\u0259rab\u0259r
AreEqual.Syntax=[ <Obyekt>, <Obyekt> ]
AreParallel.Syntax=[ <X\u0259tt>, <X\u0259tt> ]
ArePerpendicular=Perpendikuylar
ArePerpendicular.Syntax=[ <X\u0259tt>, <X\u0259tt> ]
Area=Sah\u0259
Area.Syntax=[ <Konik> ]\n[ <Coxh\u0259dli> ]\n[ <Nöqt\u0259>, ..., <Nöqt\u0259> ]
Assume=Tutaq
Assume.SyntaxCAS=[ <\u015e\u0259rt>, <\u0130fad\u0259> ]
Asymptote=Asimptot
Asymptote.Syntax=[ <Obyekt> ]
Axes=Oxlar
Axes.Syntax=[ <Konik> ]
Axes.Syntax3D=[ <Konik> ]\n[ <Kvadratik> ]
Barycenter=Baricentr
Bernoulli=Bernulli
Bernoulli.Syntax=[ <Ehtimal>, <M\u0259ntiqi Cumulativ> ]
Binomial=BinomialImsal
Binomial.Syntax=[ <N \u0259d\u0259d\u0259>, <R \u0259d\u0259di> ]
BinomialDist.SyntaxCAS=[ <S\u0131naqlar\u0131n Say\u0131>, <U\u011furlu Olma ehtimal\u0131>, <D\u0259yi\u015f\u0259n D\u0259y\u0259r>, <Boolean Kümülatif> ]
Bottom=Alt
Bottom.Syntax=[ <Kvadratik> ]
Button=Düym\u0259
Button.Syntax=[ ]\n[ <Ba\u015fl\u0131q> ]
CFactor.SyntaxCAS=[ <\u0130fad\u0259> ]\n[ <\u0130fad\u0259>, <D\u0259yi\u015f\u0259n> ]
CIFactor.SyntaxCAS=[ <\u0130fad\u0259> ]\n[ <\u0130fad\u0259>, <D\u0259yi\u015f\u0259n> ]
CSolutions=CSq\u0259rarlar\u0131
CSolutions.SyntaxCAS=[ <T\u0259nlik> ]\n[ <T\u0259nlik>, <D\u0259yi\u015f\u0259n> ]\n[ <T\u0259nlikl\u0259r Siyah\u0131s\u0131>, <D\u0259yi\u015f\u0259n siyah\u0131s\u0131> ]
CSolve.SyntaxCAS=[ <T\u0259nlik> ]\n[ <T\u0259nlik>, <D\u0259yi\u015f\u0259n> ]\n[ <T\u0259nlikl\u0259r Siyah\u0131s\u0131>, <D\u0259yi\u015f\u0259nl\u0259r Siyah\u0131s\u0131> ]
Cauchy=Ko\u015fi
Cauchy.SyntaxCAS=[ <Median>, <Miqyas>, <D\u0259yi\u015f\u0259nin qiym\u0259ti> ]
Cell=Xana
Cell.Syntax=[ <Sütun>, <S\u0131ra> ]
CellRange.Syntax=[ <\u0130lk Xana>, <Son Xana> ]
Center=M\u0259rk\u0259z
Center.Syntax=[ <Konik> ]
Center.Syntax3D=[ <Konik> ]\n[ <Kvadratik> ]
CenterView=M\u0259rk\u0259ziGörüntü
CenterView.Syntax=[ <M\u0259tk\u0259zNöqt\u0259> ]
Centroid=Sentroid
Centroid.Syntax=[ <Coxh\u0259dli> ]
Checkbox=Bayraq
Checkbox.Syntax=[ ]\n[ <Ba\u015fl\u0131q> ]\n[ <Siyah\u0131> ]\n[ <Ba\u015fl\u0131q>, <Siyah\u0131> ]
ChiSquared.SyntaxCAS=[ <S\u0259rb\u0259stlik D\u0259r\u0259c\u0259si>, <D\u0259yi\u015f\u0259n> ]
ChiSquaredTest.Syntax=[ <Matris> ]\n[ <Siyah\u0131>, <Siyah\u0131> ]\n[ <Matris>, <Matris> ]
Circle=Cevr\u0259
CircleArc.Syntax=[ <Orta nöqt\u0259>, <nöqt\u0259>, <nöqt\u0259> ]
CircleSector=Dair\u0259viSektor
CircleSector.Syntax=[ <Orta nöqt\u0259>, <nöqt\u0259>, <nöqt\u0259> ]
CircumcircleSector=Dair\u0259sektoru
CircumcircleSector.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259> ]
Circumference=Cevr\u0259ninUzunlugu
Circumference.Syntax=[ <Konik> ]
Classes.Syntax=[ <Veril\u0259nl\u0259rin siyah\u0131s\u0131>, <Sinifl\u0259rin say\u0131> ]\n[ <M\u0259lumatlar\u0131n siyah\u0131s\u0131>, <Ba\u015flan\u011f\u0131c>, <Sinifl\u0259rin eni> ]
Coefficients=\u018fmsallar
Coefficients.Syntax=[ <Coxh\u0259dli> ]\n[ <Konik> ]
Coefficients.SyntaxCAS=[ <Coxh\u0259dli> ]\n[ <Coxh\u0259dli>, <D\u0259yi\u015f\u0259n> ]
Column=Sütun
Column.Syntax=[ <Elektron C\u0259dv\u0259l> ]
ColumnName=SütunAd\u0131
ColumnName.Syntax=[ <C\u0259dv\u0259l xanas\u0131> ]
Command=\u018fmr
CommonDenominator=OrtqM\u0259xr\u0259c
CommonDenominator.Syntax=[ <\u0130fad\u0259>, <\u0130fad\u0259> ]
CompetitionRank.Syntax=[ <Siyah\u0131> ]
CompleteSquare.Syntax=[ <Kvadratik funksiya> ]
ComplexRoot=KompleksKök
ComplexRoot.Syntax=[ <Coxh\u0259dli> ]
Cone=Konus
ConeInfinite=SonsuzKonus
ConeInfinite.Syntax=[ <Nöqt\u0259>, <Vektor>, <Bucaq> ]\n[ <Nöqt\u0259>, <Nöqt\u0259>, <Bucaq> ]\n[ <Nöqt\u0259>, <X\u0259tt>, <Bucaq> ]
Conic=Konik
ConstructionStep=KonstructorAdd\u0131m
ConstructionStep.Syntax=[ ]\n[ <Obyekt> ]
ContingencyTable=Qo\u015fmalarC\u0259dv\u0259li
ContinuedFraction=Davam\u0131
ConvexHull=Qabar\u0131qÖrtük
ConvexHull.Syntax=[ <Nöqt\u0259l\u0259rin siyah\u0131s\u0131> ]
CopyFreeObject.Syntax=[ <Obyjekt> ]
Corner=Künc
CountIf.Syntax=[ <\u015e\u0259rt>, <Siyah\u0131> ]\n[ <\u015e\u0259rt>, <D\u0259yi\u015f\u0259n>, <Siyah\u0131> ]
Covariance.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]\n[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
Cross=K\u0259si\u015fdir
Cross.Syntax=[ <Vektor>, <Vektor> ]
CrossRatio.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259> ]
Cube=KUB
Cube.Syntax=[ <Kvadrat> ]\n[ <Nöqt\u0259>, <Nöqt\u0259t>, <Nöqt\u0259> ]\n[ <Nöqt\u0259>, <Nöqt\u0259>, <\u0130stiqam\u0259t> ]
Cubic=Kubik
Cubic.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259>, <\u018fd\u0259d> ]
Curvature=\u018fyrilik
Curvature.Syntax=[ <Nöqt\u0259t>, <Obyekt> ]
CurvatureVector=\u018fyrilikVectoru
CurvatureVector.Syntax=[ <Nöqt\u0259>, <Obyekt> ]
CurveCartesian=\u018fyri
CurveCartesian.Syntax=[ <\u0130fad\u0259>, <\u0130fad\u0259>, <D\u0259yi\u015f\u0259n Parameter>, <\u0130lk qiym\u0259t>, <Son Qiym\u0259t> ]
Cylinder=Silindr
Cylinder.Syntax=[ <Dair\u0259e>, <Hündürlük> ]\n[ <Nöqt\u0259>, <Nöqt\u0259>, <Radius> ]
CylinderInfinite=SonsuzSilindr
DataFunction.Syntax=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
Defined=T\u0259rif
Defined.Syntax=[ <Obyekt> ]
Degree=D\u0259r\u0259c\u0259
Degree.Syntax=[ <Coxh\u0259dli> ]
Degree.SyntaxCAS=[ <coxh\u0259dli> ]\n[ <Coxh\u0259dli, <D\u0259yi\u015f\u0259n> ]
DelauneyTriangulation=DeloneTriangulyasiyas\u0131
DelauneyTriangulation.Syntax=[ <Nöqt\u0259l\u0259r Siyah\u0131s\u0131> ]
Delete=Sil
Delete.Syntax=[ <Obyekt> ]
Denominator=M\u0259xr\u0259c
Denominator.Syntax=[ <\u018fd\u0259d> ]\n[ <Funksiya> ]
Denominator.SyntaxCAS=[ <\u0130fad\u0259> ]
DensityPlot=S\u0131xl\u0131q
Determinant.Syntax=[ <Matris> ]
Difference=Tör\u0259m\u0259
Difference.Syntax=[ <Coxbucaql\u0131>, <Coxbucaql\u0131> ]
Dilate=Geni\u015fl\u0259ndirm\u0259
Dimension=Ölçü
Dimension.Syntax=[ <Obyekt> ]
Direction=\u0130stiqam\u0259t
Direction.Syntax=[ <X\u0259tt> ]
Directrix=Directria
Directrix.Syntax=[ <Konik> ]
Distance=M\u0259saf\u0259
Distance.Syntax=[ <Nöqt\u0259>, <Obyekt> ]\n[ <X\u0259tt>, <X\u0259tt> ]\n[ <Plan>, <Plan> ]
Div.Syntax=[ <Dividend Say\u0131>, <Bölücü Say\u0131> ]\n[ <Dividend Polinomu>, <Bölücü Polinomu> ]
Division=Bölm\u0259
Divisors=Böl\u0259nl\u0259r
Divisors.Syntax=[ <\u018fd\u0259d> ]
DivisorsList.Syntax=[ <\u018fd\u0259d> ]
DivisorsSum.Syntax=[ <\u018fd\u0259d> ]
Dodecahedron=Dodekaedor
Dodecahedron.Syntax=[ <Düzgün be\u015fbucaql\u0131> ]\n[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259> ]\n[ <Nöqt\u0259>, <Nöqt\u0259>, <\u0130stiqam\u0259t> ]
Dot.Syntax=[ <Vektor>, <Vektorr> ]
DynamicCoordinates=DynamikKoordinatlar
DynamicCoordinates.Syntax=[ <Nöqt\u0259>, <x-Koordinat>, <y-Koordinate> ]\n[ <Nöqt\u0259>, <x-Koordinat>, <y-Koordinat>, <z-Koordinat> ]
Eccentricity=Eksantriklik
Eccentricity.Syntax=[ <Konik> ]
Eigenvalues=M\u0259xsusiQiym\u0259t
Eigenvalues.SyntaxCAS=[ <Matrs> ]
Eigenvectors=M\u0259xsusiVektor
Eigenvectors.SyntaxCAS=[ <Matris> ]
Eliminate=AradanQald\u0131r
Eliminate.Syntax=[ <Coxh\u0259dli siyah\u0131s\u0131>, <D\u0259yi\u015f\u0259n siyah\u0131s\u0131> ]
Ellipse=Ellips
Ends=Bitir
Ends.Syntax=[ <Kvadratik> ]
Envelope=Z\u0259rf
Envelope.Syntax=[ <Yol>, <Nöqt\u0259> ]
Evaluate=Qiym\u0259tl\u0259ndirin
Excentricity=X\u0259tti
Excentricity.Syntax=[ <Konik> ]
Execute=\u0130craet
Execute.Syntax=[ <M\u0259tn siyah\u0131s\u0131> ]\n[ <M\u0259tn siyah\u0131s\u0131>, <Parametr>, <Parametr>, ... ]
Expand=Geni\u015fl\u0259ndirin
Expand.Syntax=[ <\u0130fad\u0259> ]
Exponential=Exponenta
Exponential.Syntax=[ <Lyambda>, <d\u0259yi\u015f\u0259nin qiym\u0259ti> ]\n[ <Lambda>, <d\u0259yi\u015f\u0259nin qiym\u0259t>, <M\u0259ntiqi m\u0259nims\u0259dici> ]\n[ <Lambda>, x, <M\u0259ntiqi m\u0259nims\u0259dici> ]
Exponential.SyntaxCAS=[ <Lambda>, <D\u0259yi\u015f\u0259n D\u0259y\u0259r> ]
ExportImage.Syntax=[ <Xass\u0259>, <Qiym\u0259t>, <Xass\u0259>, <Qiym\u0259t>, ... ]
Extremum.Syntax=[ <Coxh\u0259dli> ]\n[ <Funksiya>, <x-in ilk qiym\u0259ti>, <x-in son qiym\u0259ti> ]
Factor=Amil
Factor.Syntax=[ <Coxh\u0259dli> ]
Factor.SyntaxCAS=[ <\u018fd\u0259d> ]\n[ <Coxh\u0259dli> ]\n[ <\u0130fad\u0259>, <D\u0259yi\u015f\u0259n> ]
Factors=Amill\u0259r
Factors.Syntax=[ <Coxh\u0259dli> ]\n[ <\u018fd\u0259d> ]
FillColumn.Syntax=[ <Sütun>, <Siyah\u0131> ]
FillRow.Syntax=[ <S\u0259tir>, <Siyah\u0131> ]
First=Birincisi
First.SyntaxCAS=[ <Siyah\u0131> ]\n[ <Siyah\u0131>, <Element say\u0131> ]
FirstAxis=BöyükOx
FirstAxis.Syntax=[ <Konik> ]
FirstAxisLength.Syntax=[ <Konik> ]
Fit=Uy\u011fun
Fit.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131>, <Funksiyalar\u0131n siyah\u0131s\u0131> ]\n[ <Xallar\u0131n siyah\u0131s\u0131>, <Funksiya> ]
FitExp.Syntax=[ <Nöqt\u0259l\u0259rSiyah\u0131s\u0131> ]
FitGrowth.Syntax=[ <Nöqt\u0259l\u0259r Siyah\u0131s\u0131> ]
FitImplicit.Syntax=[ <Xal siyah\u0131s\u0131>, <Sifari\u015f> ]
FitLineX.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
FitLineY.Syntax=[ <Nött\u0259l\u0259r Siyah\u0131s\u0131> ]
FitLog.Syntax=[ <Nöqt\u0259l\u0259rin siyah\u0131s\u0131> ]
FitLogistic.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
FitPoly.Syntax=[ <Nöqt\u0259l\u0259rin Siyah\u0131s\u0131>, <Polinom D\u0259r\u0259c\u0259> ]\n[ <S\u0259rb\u0259st \u0130\u015fl\u0259m\u0259>, <Polinom D\u0259r\u0259c\u0259> ]
FitPow.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
FitSin.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
Flatten=Düz\u0259ldin
Flatten.Syntax=[ <Siyah\u0131> ]
Focus=Fokus
Focus.Syntax=[ <Konik> ]
FractionText.Syntax=[ <\u018fd\u0259d> ]\n[ <Nöqt\u0259> ]
Frequency=Tezlik
FrequencyPolygon=TezlikCoxh\u0259dlisi
FrequencyTable=TezlikC\u0259dv\u0259li
FromBase.Syntax=[ "<\u018fd\u0259d m\u0259tn kimi>", <Baza> ]
Function=Funksiya
Function.Syntax=[ <\u018fd\u0259dl\u0259r siyah\u0131s\u0131> ]\n[ <Funksiya>, <Ba\u015flang\u0131c qiym\u0259t>, <Son qiym\u0259t> ]
Function.SyntaxCAS=[ <Funksiya>, <x-in ilkin qiym\u0259ti>, <x-in son qiym\u0259ti> ]
GCD.Syntax=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]\n[ <Say\u0131>, <Say\u0131> ]
GCD.SyntaxCAS=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]\n[ <Polinomlar\u0131n siyah\u0131s\u0131> ]\n[ <Say\u0131>, <Say\u0131> ]\n[ <Polinom>, <Polinomial> ]
Gamma=Qamma
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <d\u0259yi\u015f\u0259nin qiym\u0259ti> ]
GeometricMean=H\u0259nd\u0259siOrta
GetTime.Syntax=[ ]\n[ "<Format>" ]
GroebnerDegRevLex.Syntax=[ <Coxh\u0259dli Siyah\u0131s\u0131> ]\n[ <Coxh\u0259dli Siyah\u0131s\u0131>, <D\u0259yi\u015f\u0259nl\u0259r Siyah\u0131s\u0131> ]
GroebnerLex.Syntax=[ <Coxh\u0259dli siyah\u0131s\u0131> ]\n[ <Coxh\u0259dli siyah\u0131s\u0131>, <D\u0259yi\u015f\u0259nl\u0259r siyah\u0131s\u0131> ]
HarmonicMean=HarmonikOrta
HarmonicMean.Syntax=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
Height=Hündürlük
HideLayer.Syntax=[ <\u018fd\u0259d> ]
HistogramRight=HistogramDüz
HyperGeometric=HiperH\u0259nd\u0259s\u0259
HyperGeometric.SyntaxCAS=[ <\u018fhali ölçüsü>, <U\u011furlar\u0131n say\u0131>, <Nümun\u0259 ölçüsü>, <D\u0259yi\u015f\u0259n d\u0259y\u0259r>, <M\u0259ntiqi m\u0259cmu> ]
Hyperbola=Hiperbola
IFactor.Syntax=[ <Coxh\u0259dli> ]
IFactor.SyntaxCAS=[ <\u0130fad\u0259> ]\n[ <\u0130fad\u0259>, <D\u0259yi\u015f\u0259n> ]
Icosahedron=Ikosaeder
Icosahedron.Syntax=[ <B\u0259rab\u0259r t\u0259r\u0259fli üçbucaq> ]\n[ <nöqt\u0259>, <nöqt\u0259>, <nöqt\u0259> ]\n[ <nöqt\u0259>, <nöqt\u0259>, <istiqam\u0259t> ]
Identity=eynilik
Identity.Syntax=[ <\u018fd\u0259d> ]
If=\u018fg\u0259r
If.Syntax=[ <\u015e\u0259rtn>, <Onda> ]\n[ <\u015e\u0259rt>, <Onda>, <\u018fkshalda> ]
ImplicitCurve.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]\n[ <f (x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <\u0130fad\u0259>, <as\u0131l\u0131 d\u0259yi\u015f\u0259n>, <as\u0131l\u0131 olmayan d\u0259yi\u015f\u0259n> ]
Incircle=Dair\u0259
Incircle.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259> ]
IndexOf=Indeksi
IndexOf.Syntax=[ <Obyekt>, <Siyah\u0131> ]\n[ <M\u0259tn>, <M\u0259tn> ]\n[ <Obyekt>, <Siyah\u0131>, <\u0130lkin Indeks> ]\n[ <M\u0259tnt>, <M\u0259tn, <\u0130lkin Indeks> ]
Insert=Daxiledin
Insert.Syntax=[ <Siyah\u0131>, <Siyah\u0131>, <V\u0259zif\u0259> ]\n[ <Nesne>, <Siyah\u0131>, <V\u0259zif\u0259> ]
Integral.SyntaxCAS=[ <Funksiya> ]\n[ <Function>, <Variable> ]\n[ <Funksiya>, <x-in ilkin qiym\u0259ti>, <x-in son qiym\u0259ti> ]\n[ <Funksiya>, <D\u0259yi\u015f\u0259n>, <ilkin qiym\u0259t>, <Son qiym\u0259t> ]
IntegralBetween.Syntax=[ <Funksiya>, <Funksiya>, <x-in ilk qiym\u0259ti>, <x-in son qiym\u0259ti> ]\n[ <Funksiya>, <Funksiya>, <x-in ilk qiym\u0259ti>, <x-in son qiym\u0259ti>, <M\u0259ntiqi Hesablama> ]
IntegralSymbolic=BütövSimvolik
IntegralSymbolic.Syntax=[ <Funksiya> ]\n[ <Funksiya>, <D\u0259yi\u015f\u0259n> ]
InteriorAngles.Syntax=[ <Coxh\u0259dli> ]
Intersect=K\u0259si\u015fm\u0259k
Intersect.SyntaxCAS=[ <Funksiya>, <Funksiya> ]
Intersection=K\u0259si\u015fm\u0259
Intersection.Syntax=[ <Siyah\u0131>, <Siyah\u0131> ]
InverseBinomial=T\u0259rsBinomial
InverseBinomial.Syntax=[ <S\u0131naq say\u0131>, <Ugur Ehtimal\u0131>, <Ehtimal> ]
InverseCauchy=T\u0259rs
InverseCauchy.Syntax=[ <Median>, <Miqyas>, <Ehtimal> ]
InverseChiSquared.Syntax=[ <S\u0259rb\u0259stlik d\u0259r\u0259c\u0259si>, <Ehtimal> ]
InverseExponential=T\u0259rsexponential
InverseExponential.Syntax=[ <Lyambda>, <Ehtimal> ]
InverseFDistribution=T\u0259rsPaylama
InverseGamma=T\u0259rsGamma
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Ehtimal> ]
InverseHyperGeometric=T\u0259rsHyperGeometric
InverseLaplace.Syntax=[ <Funksiya> ]\n[ <Funksiya>, <D\u0259yi\u015f\u0259n> ]\n[ <Funksiya>, <D\u0259yi\u015f\u0259n>, <D\u0259yi\u015f\u0259n> ]
InverseLogNormal.Syntax=[ <Orta>, <Standart Sapma>, <Ehtimal> ]
InverseLogistic.Syntax=[ <Orta>, <Miqyas>, <Ehtimal> ]
InverseNormal=TersNormal
InverseNormal.Syntax=[ <Orta>, <Standard Meyillik>, <Ehtimal> ]
InversePascal=T\u0259rsPaskal
InversePascal.Syntax=[ <n>, <p>, <Ehtimal> ]
InversePoisson=T\u0259rsPuasson
InversePoisson.Syntax=[ <Orta>, <Ehtimal> ]
InverseTDistribution=T\u0259rsBölg\u0259
InverseTDistribution.Syntax=[ <S\u0259rb\u0259stlik d\u0259r\u0259c\u0259si>, <Ehtimal> ]
InverseWeibull.Syntax=[ <Forma>, <Miqyas>, <Ehtimal> ]
InverseZipf=TersZipf
InverseZipf.Syntax=[ <Element say\u0131>, <Exponent>, <Ehtimal> ]
Invert=Tersçevirin
Invert.Syntax=[ <Matric> ]\n[ <Funksiya> ]
IsInRegion.Syntax=[ <Nöqt\u0259>, <Bölg\u0259> ]
IsInteger.Syntax=[ <\u018fd\u0259d> ]
IsPrime.Syntax=[ <\u018fd\u0259d> ]
IsTangent=Toxunma
IsTangent.Syntax=[ <X\u0259tt>, <Konik> ]
IsVertexForm.Syntax=[ <Funksiya> ]
Iteration=\u0130terasiya
IterationList=T\u0259krarlamaSiyah\u0131s\u0131
Join=Qo\u015fulun
JordanDiagonalization=JordanDiagonalla\u015fmas\u0131
JordanDiagonalization.SyntaxCAS=[ <Matris> ]
LCM.Syntax=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]\n[ <Say\u0131>, <Say\u0131> ]
LaTeX=FormulaM\u0259tn
Laplace=Laplas
Laplace.Syntax=[ <Funksiya> ]\n[ <Funksiya>, <D\u0259yi\u015f\u0259n> ]\n[ <Funksiya>, <D\u0259yi\u015f\u0259n>, <D\u0259yi\u015f\u0259n> ]
Last=Sonuncu
Last.SyntaxCAS=[ <Siyah\u0131> ]\n[ <Siyah\u0131>, <Element Say\u0131> ]
LeftSide=Sol
LeftSide.Syntax=[ <T\u0259nziml\u0259m\u0259> ]
LeftSide.SyntaxCAS=[ <T\u0259nlik> ]\n[ <T\u0259nlikl\u0259rin siyah\u0131s\u0131> ]\n[ <T\u0259nlikl\u0259rin siyah\u0131s\u0131>, <\u0130ndeks> ]
LeftSum.Syntax=[ <Funksiya>, <x-in ilk qiym\u0259ti>, <x-in son qiym\u0259ti>, <Düzbucaql\u0131 say\u0131> ]
Length=Uzunluq
LetterToUnicode.Syntax=[ "<M\u0259ktub>" ]
Limit.Syntax=[ <Funksiya>, <Qiym\u0259t> ]
Limit.SyntaxCAS=[ <\u0130fad\u0259>, <D\u0259y\u0259r> ]\n[ <\u0130fad\u0259>, <D\u0259yi\u015f\u0259n>, <D\u0259y\u0259r> ]
LimitAbove=Yuxar\u0131da
LimitAbove.Syntax=[ <Funksiya>, <Qiym\u0259t> ]
LimitAbove.SyntaxCAS=[ <\u0130fad\u0259>, <Qiym\u0259t> ]\n[ <\u0130fad\u0259>, <D\u0259yi\u015f\u0259n>, <Qiym\u0259t> ]
LimitBelow=SolLimit
LimitBelow.Syntax=[ <Funksiya>, <Qiym\u0259t> ]
Line=X\u0259tt
LineBisector=T\u0259nböl\u0259n\u0259perpendikulyar
LineBisector.Syntax=[ <Parca> ]\n[ <Point>, <Point> ]
LineBisector.Syntax3D=[ <Parca> ]\n[ <Nöqt\u0259>, <Nöqt\u0259> ]\n[ <Nöqt\u0259>, <Nöqt\u0259>, <\u0130stiqam\u0259t> ]
LineGraph=X\u0259ttiQraf
LineGraph.Syntax=[ <x-koortinat siyah\u0131s\u0131>, <y-koordinat siyah\u0131s\u0131> ]
Locus=Lokus
LogNormal=Giri\u015fnormald\u0131r
Logistic=M\u0259ntiqi
LowerSum.Syntax=[ <Funksiya, <X-in ilk qiym\u0259ti>, <X-in son qiym\u0259ti>, <Düzbucaql\u0131 say\u0131> ]
MAD.Syntax=[ <Xam M\u0259lumat siyah\u0131s\u0131> ]\n[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <Tezlikl\u0259rin siyah\u0131s\u0131> ]
MatrixRank=MatrisinRanq\u0131
MatrixRank.Syntax=[ <Matris> ]
Maximize=Maksimumla\u015fd\u0131r\u0131n
Mean=Orta
Mean.SyntaxCAS=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
MeanX=OrtaX
MeanX.Syntax=[ <Nöqt\u0259l\u0259r siyah\u0131s\u0131> ]
MeanY.Syntax=[ <Nöqt\u0259l\u0259rin siyah\u0131s\u0131> ]
Median.Syntax=[ <Veril\u0259nl\u0259r Siyah\u0131s\u0131> ]\n[ <\u018fd\u0259dl\u0259r siyah\u0131s\u0131>, <Tezlik siyah\u0131s\u0131> ]
Median.SyntaxCAS=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
Midpoint=Ortanöqt\u0259
Midpoint.Syntax=[ <Parca> ]\n[ <Konikc> ]\n[ <Interval> ]\n[ <Nöqt\u0259>, <Nöqt\u0259> ]
Min.SyntaxCAS=[ <Siyah\u0131> ]\n[ <\u018fd\u0259d>, <\u018fd\u0259d> ]
Minimize=Kiçilt
MinimumSpanningTree.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
Mirror=\u0130nikas
Mirror.Syntax=[ <Obyekt>, <Nöqt\u0259> ]\n[ <Obyekt>, <X\u0259tt> ]\n[ <Obyekt>, <Dair\u0259> ]
MixedNumber=Qar\u0131\u015f\u0131qNömr\u0259
MixedNumber.SyntaxCAS=[ <\u018fd\u0259d> ]
Mode=Rejim
Mode.Syntax=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
NIntegral=\u0130nteqral
NIntegral.SyntaxCAS=[ <Funksiya>, <x-in ilkin qiym\u0259ti>, <x-in son qiym\u0259ti> ]\n[ <Funksiya>, <D\u0259yi\u015f\u0259n>, <\u0130lkin qiym\u0259t>, <Son Qiym\u0259t> ]
NInvert.Syntax=[ <Funksiya> ]
NSolutions=H\u0259llEt
NSolutions.Syntax=[ <T\u0259nziml\u0259m\u0259> ]
NSolve.Syntax=[ <T\u0259nlik> ]
NSolve.SyntaxCAS=[ <T\u0259nziml\u0259m\u0259> ]\n[ <T\u0259nziml\u0259m\u0259>, <D\u0259yi\u015f\u0259nlik> ]\n[ <D\u0259y\u0259r>, <D\u0259yi\u015f\u0259n = ba\u015flan\u011f\u0131c d\u0259y\u0259ri> ]\n[ <T\u0259nlikl\u0259rin siyah\u0131s\u0131>, <D\u0259yi\u015f\u0259nl\u0259rin siyah\u0131s\u0131> ]
NSolveODE.Syntax=[ <Tör\u0259m\u0259l\u0259rin siyah\u0131s\u0131>, <\u0130lkin x koordinat>, <\u0130lkin y koordinatlar\u0131n siyah\u0131s\u0131>, <Son x koordinat> ]
Name=Ad
Name.Syntax=[ <Obyekt> ]
Net=\u015e\u0259b\u0259k\u0259
NextPrime.Syntax=[ <\u018fd\u0259d> ]
Normal.SyntaxCAS=[ <Orta>, <Standard Meyil>, <D\u0259yi\u015f\u0259nin qiym\u0259ti> ]
NormalQuantilePlot.Syntax=[ <Veril\u0259nl\u0259r siyah\u0131s\u0131> ]
Normalize=Normalla\u015fd\u0131r\u0131n
Normalize.Syntax=[ <\u018fd\u0259dl\u0259rin siyah\u0131s\u0131> ]\n[ <Nöqt\u0259l\u0259rin siyah\u0131s\u0131> ]
Numerator=Nömr\u0259l\u0259ndirici
Numerator.Syntax=[ <\u018fd\u0259d> ]\n[ <Funksiya> ]
Numerator.SyntaxCAS=[ <\u0130fad\u0259> ]
Numeric=R\u0259q\u0259msal
Numeric.SyntaxCAS=[ <\u0130fad\u0259> ]\n[ <\u0130fad\u0259>, <\u018fd\u0259di qiym\u0259t> ]
Object=Obyekt
Object.Syntax=[ <M\u0259tn Obyektinin Ad\u0131> ]
Octahedron=Oktaedr
Octahedron.Syntax=[ <B\u0259rab\u0259rt\u0259r\u0259fli ücbucaq> ]\n[ <nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259> ]\n[ <Nöqt\u0259>, <Nöqt\u0259>, <\u0130stiqam\u0259t> ]
Ordinal.Syntax=[ <tamr> ]
OrdinalRank.Syntax=[ <Siyah\u0131> ]
OrthogonalLine=PerpendicularX\u0259tt
OrthogonalLine.Syntax=[ <Nöqt\u0259>, <X\u0259tt> ]\n[ <Nöqt\u0259>, <Parca> ]\n[ <Point>, <Vektor> ]
OrthogonalPlane=PerpendikulyarMüst\u0259vi
OrthogonalPlane.Syntax=[ <Nöqt\u0259>, <X\u0259tt> ]\n[ <Nöqt\u0259>, <Vektor> ]
OrthogonalVector=PerpendikulyarVektor
OrthogonalVector.Syntax=[ <S\u0259tir> ]\n[ <Bölm\u0259> ]\n[ <Vektor> ]
OrthogonalVector.Syntax3D=[ <S\u0259tir> ]\n[ <Bölm\u0259> ]\n[ <Vektor> ]\n[ <Plan> ]
OrthogonalVector.SyntaxCAS=[ <Vektor> ]
OsculatingCircle.Syntax=[ <Nöqt\u0259>, <Obyekt> ]
PMCC=Korrelyasiya\u018fmsal\u0131
PMCC.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]\n[ <x koordinatlar\u0131n siyah\u0131s\u0131>, <y koordinatlar\u0131n siyah\u0131s\u0131> ]
Parameter=Parametr
ParametricDerivative=ParametrikTör\u0259m\u0259
ParametricDerivative.Syntax=[ <\u018fyri> ]
ParseToFunction.Syntax=[ <Funksiya>, <S\u0259tirli> ]
ParseToNumber.Syntax=[ <Say\u0131>, <Simli> ]
PartialFractions.Syntax=[ <Funksiya> ]
PartialFractions.SyntaxCAS=[ <Funksiya> ]\n[ <Funksiya>, <D\u0259yi\u015f\u0259n> ]
Pascal.SyntaxCAS=[ <n>, <p>, <D\u0259yi\u015f\u0259nin qiym\u0259ti>, <Boolean Cumulative> ]
Payment=Öd\u0259ni\u015f
Percentile=Faiz
Percentile.Syntax=[ <\u018fd\u0259dl\u0259r siyah\u0131s\u0131>, <Faiz> ]
Perimeter=Perimetr
Perimeter.Syntax=[ <Coxh\u0259dli> ]\n[ <Konik> ]\n[ <Lokus> ]
Periods=Dövr
PieChart=Dair\u0259viDiaqram
PieChart.Syntax=[ <Tezlikl\u0259rin siyah\u0131s\u0131> ]\n[ <Tezlikl\u0259rin siyah\u0131s\u0131>, <M\u0259rk\u0259z>, <Radius> ]
Plane=Plan
PlaySound=S\u0259sl\u0259ndir
PlotSolve.Syntax=[ <T\u0259nlik x> ]
Point=Nöqt\u0259
Point.Syntax=[ <Obyekt> ]\n[ <Siyah\u0131> ]\n[ <Obyekt>, <Parametr> ]\n[ <Nöqt\u0259>, <Vektor> ]
PointList.Syntax=[ <Siyah\u0131> ]
Poisson=Puasson
Poisson.SyntaxCAS=[ <Orta>, <D\u0259yi\u015f\u0259nin qiym\u0259ti>, <M\u0259ntiqi Toplay\u0131c\u0131> ]
Polar=Polyar
Polar.Syntax=[ <Nöqt\u0259>, <Konik> ]\n[ <X\u0259tt>, <Konik> ]
PolyLine=S\u0131n\u0131qX\u0259tt
PolyLine.Syntax=[ <Nöqt\u0259l\u0259r siyah\u0131s\u0131> ]\n[ <Nöqt\u0259>, ..., <Nöqt\u0259> ]
Polygon=Çoxbucaql\u0131
Polynomial=Coxh\u0259dli
Polynomial.Syntax=[ <Funksiya> ]\n[ <Nöqt\u0259l\u0259r siyah\u0131s\u0131> ]
Polynomial.SyntaxCAS=[ <Funksiya> ]\n[ <Funksiya>, <D\u0259yi\u015f\u0259n> ]
PresentValue=Haz\u0131rk\u0131d\u0259y\u0259r
PreviousPrime.Syntax=[ <\u018fd\u0259d> ]
PrimeFactors=\u018fsasAmill\u0259r
PrimeFactors.Syntax=[ <\u018fd\u0259d> ]
Prism=Prizma
Prism.Syntax=[ <Coxbucaql\u0131>, <Nöqt\u0259> ]\n[ <Coxbucaql\u0131>, <Hündürluk qiym\u0259ti> ]\n[ <Nöqt\u0259>, <Nöqt\u0259>, ... ]
Product=M\u0259hsul
Prove=Yoxla
Prove.Syntax=[ <M\u0259ntiq \u0130fad\u0259> ]
ProveDetails.Syntax=[ <M\u0259ntiqi ifad\u0259> ]
Pyramid=Piramida
Q1.Syntax=[ <Xam M\u0259lumat siyah\u0131s\u0131> ]\n[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <Tezlikl\u0259rin siyah\u0131s\u0131> ]
Q3.Syntax=[ <Xam M\u0259lumat siyah\u0131s\u0131> ]\n[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <Tezlikl\u0259rin siyah\u0131s\u0131> ]
QuadricSide=Yan
QuadricSide.Syntax=[ <Kvadratik> ]
Radius.Syntax=[ <Konik> ]
Random.Syntax=[ <Minimal  tam \u0259d\u0259d>, <Maximal tam \u0259d\u0259d> ]\n[ <Minimal  tam \u0259d\u0259d>, <Maximal tam \u0259d\u0259d>, <Qeyd edilmi\u015f m\u0259ntiqi qiym\u0259t> ]
Random.SyntaxCAS=[ <Minimum Tam \u018fd\u0259d>, <Maksimum Tam \u018fd\u0259d> ]
RandomBinomial=T\u0259sadüfiBinomial
RandomBinomial.Syntax=[ <s\u0131naq say\u0131>, <ehtimal> ]
RandomDiscrete=T\u0259sadüfiDiskret
RandomDiscrete.Syntax=[ <Siyah\u0131>, <Siyah\u0131> ]
RandomElement=T\u0259sadufiElement
RandomElement.Syntax=[ <Siyah\u0131> ]
RandomNormal=T\u0259sadüfiNormal
RandomNormal.Syntax=[ <Orta>, <Standard Meyil> ]
RandomPointIn.Syntax=[ <Region> ]\n[ <Xallar\u0131n siyah\u0131s\u0131> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=T\u0259sadüfiPuasson
RandomPoisson.Syntax=[ <Orta> ]
RandomPolynomial=T\u0259sadufcoxh\u0259dlisi
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Nümun\u0259 say\u0131> ]
Rate=D\u0259r\u0259c\u0259si
Rationalize=Rasionalla\u015fd\u0131r
Rationalize.SyntaxCAS=[ <\u018fd\u0259dr> ]
Ray=\u015eüa
Ray.Syntax=[ <Ba\u015flan\u011f\u0131c Noktas\u0131>, <Nöqt\u0259> ]\n[ <Ba\u015flan\u011f\u0131c Noktas\u0131>, <\u0130stiqam\u0259t Vektoru> ]
ReadText=M\u0259tniDaxilEt
ReadText.Syntax=[ <M\u0259tn> ]
RectangleSum=Düzbucaql\u0131C\u0259m
RectangleSum.Syntax=[ <Funksiya>, <x-in ilkin qiym\u0259ti>, <X-in son qiym\u0259ti>, <Düzbucaql\u0131 say\u0131>, <düzbucaql\u0131n\u0131n ilkin v\u0259ziyy\u0259ti> ]
ReducedRowEchelonForm.Syntax=[ <Matris> ]
Relation=\u018flaq\u0259
RemovableDiscontinuity.Syntax=[ <Funksiya> ]
Remove.Syntax=[ <Siyah\u0131>, <Siyah\u0131> ]
RemoveUndefined=Silin
RemoveUndefined.Syntax=[ <Siyah\u0131> ]
Rename=Ad\u0131n\u0131d\u0259yi\u015f
Rename.Syntax=[ <Obyekt>, <Ad> ]
Repeat=T\u0259krarlamaq
ReplaceAll=Ham\u0131s\u0131n\u0131\u018fv\u0259zl\u0259
ReplaceAll.Syntax=[ <M\u0259tn>, <Uy\u011funla\u015fd\u0131rmaq üçün m\u0259tn>, <\u018fv\u0259z etm\u0259k üçün m\u0259tn> ]
ResidualPlot=Qal\u0131qSah\u0259
ResidualPlot.Syntax=[ <Nöqt\u0259l\u0259r siyah\u0131s\u0131>, <Funksiya> ]
Reverse=\u018fks
Reverse.Syntax=[ <Siyah\u0131> ]
RightSide.Syntax=[ <T\u0259nlik> ]
RightSide.SyntaxCAS=[ <T\u0259nlik> ]\n[ <T\u0259nlikl\u0259rin siyah\u0131s\u0131> ]\n[ <T\u0259nlikl\u0259rin siyah\u0131s\u0131>, <\u0130ndeks> ]
RigidPolygon=S\u0259rtCoxbucaql\u0131
Root=Kök
Root.Syntax=[ <Coxh\u0259dli> ]\n[ <Funksiya>, <x-in ilk qiym\u0259ti> ]\n[ <Funksiya>, <x-in ilk qiym\u0259ti>, <x-in son qiym\u0259ti> ]
Root.SyntaxCAS=[ <Coxh\u0259dli> ]
RootList.Syntax=[ <Siyah\u0131> ]
RootMeanSquare.Syntax=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
Roots=Kökl\u0259r
Roots.Syntax=[ <Funksiya>, <x-in ilk qiym\u0259ti>, <X-in son qiym\u0259ti> ]
Rotate=Döndür
RotateText.Syntax=[ <M\u0259tn>, <Bucaq> ]
Row.Syntax=[ <\u018fyri> ]
RunClickScript.Syntax=[ <Obyektt> ]
RunUpdateScript.Syntax=[ <Obyekt> ]
SD.Syntax=[ <Xam M\u0259lumat siyah\u0131s\u0131> ]\n[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <Tezlikl\u0259rin siyah\u0131s\u0131> ]
SDX.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
SDY.Syntax=[ <Nöqt\u0259l\u0259r siyah\u0131s\u0131> ]
SVD.Syntax=[ <Matris> ]
SXX.Syntax=[ <\u018fd\u0259dl\u0259r s\u0131ras\u0131> ]\n[ <Nöqt\u0259l\u0259r siras\u0131> ]
SYY.Syntax=[ <Nöqt\u0259l\u0259r Siyah\u0131s\u0131> ]
Sample=Nümun\u0259
Sample.Syntax=[ <Siyah\u0131>, <Ölçü> ]\n[ <Siyah\u0131>, <Ölçü>, <\u018fv\u0259zl\u0259> ]
SampleSD=Nümun\u0259SD
SampleSD.SyntaxCAS=[ <Nömr\u0259l\u0259rin Siyah\u0131s\u0131> ]
SampleSDX.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
SampleSDY.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
SampleVariance=Secm\u0259Dispersiya
SampleVariance.Syntax=[ <Veril\u0259nl\u0259r siyah\u0131s\u0131> ]\n[ <\u018fd\u0259dl\u0259r siyah\u0131s\u0131>, <Tezlik siyah\u0131s\u0131> ]
SampleVariance.SyntaxCAS=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
SecondAxis=KicikOx
SecondAxis.Syntax=[ <Conik> ]
SecondAxisLength.Syntax=[ <Konik> ]
Sector=Sektor
Segment.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259> ]\n[ <Nöqt\u0259>, <Uzunluq> ]
SelectObjects=ObyektiSecin
SelectObjects.Syntax=[ ]\n[ <Obyekt>, <Obyekt>, ... ]
SelectedElement=Seçilmi\u015fElement
SelectedElement.Syntax=[ <Siyah\u0131> ]
SelectedIndex.Syntax=[ <Siyah\u0131> ]
Semicircle=Yar\u0131mdair\u0259
Semicircle.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259> ]
Sequence=Ard\u0131c\u0131ll\u0131q
SetAxesRatio.Syntax=[ <\u018fd\u0259d>, <\u018fd\u0259d> ]
SetAxesRatio.Syntax3D=[ <\u018fd\u0259d>, <\u018fd\u0259dr> ]\n[ <\u018fd\u0259d>, <\u018fd\u0259d>, <\u018fd\u0259d> ]
SetCaption.Syntax=[ <Obyekt>, <Tekst> ]
SetColor.Syntax=[ <Obyekt>, "<R\u0259ng>" ]\n[ <Obyekt>, <Q\u0131rm\u0131z\u0131>, <C\u0259hray\u0131>, <Mavi> ]
SetConditionToShowObject.Syntax=[ <Obyekt>, <\u015e\u0259rt> ]
SetConstructionStep=Qura\u015fd\u0131rmaAd\u0131m\u0131
SetConstructionStep.Syntax=[ <\u018fd\u0259d> ]
SetCoords.Syntax=[ <Objekt>, <x>, <y> ]\n[ <Objekt>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <Obyekt>, <\u018fd\u0259d> ]
SetFilling=Doldurma
SetFilling.Syntax=[ <Obyekt>, <\u0259d\u0259d> ]
SetFixed.Syntax=[ <Obyekt>, <dogru | yalan> ]\n[ <Obyekt>, <dogru | yalan>, <dogru | yalan> ]
SetLabelMode.Syntax=[ <Obyekt>, <\u018fd\u0259d> ]
SetLayer.Syntax=[ <Obyekt>, <Qat> ]
SetLevelOfDetail.Syntax=[ <S\u0259th>, <Detalla\u015fma s\u0259viyy\u0259si> ]
SetLineStyle.Syntax=[ <S\u0259tir>, <Say\u0131> ]
SetLineThickness.Syntax=[ <X\u0259tt>, <\u018fd\u0259d> ]
SetPerspective.Syntax=[ <M\u0259tn> ]
SetPointSize.Syntax=[ <Obyekt>, <\u018fd\u0259d> ]
SetPointStyle.Syntax=[ <Nöqt\u0259>, <\u018fd\u0259d> ]
SetSeed.Syntax=[ <Tam\u018fd\u0259d> ]
SetSpinSpeed.Syntax=[ <\u018fd\u0259d> ]
SetTooltipMode.Syntax=[ <ObYekt>, <\u018fd\u0259d> ]
SetTrace.Syntax=[ <Obyekt>, <do\u011fru | yalan> ]
Shear=Kesme
Shear.Syntax=[ <Obyekt>, <X\u0259tt>, <Nisb\u0259t> ]
ShortestDistance=\u018fnQ\u0131saM\u0259saf\u0259
ShowAxes=OxuGöst\u0259r
ShowLabel=EtiketiGöst\u0259r
ShowLabel.Syntax=[ <Obyekt>, <M\u0259ntiqi> ]
ShowLayer.Syntax=[ <\u018fd\u0259d> ]
Shuffle=Qar\u0131\u015fd\u0131r\u0131n
Shuffle.Syntax=[ <Siyah\u0131> ]
SigmaXX.Syntax=[ <Nöqt\u0259l\u0259rin siyah\u0131s\u0131> ]\n[ <Xam m\u0259lumatlar\u0131n siyah\u0131s\u0131> ]\n[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <tezlikl\u0259rin siyah\u0131s\u0131> ]
SigmaYY.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
Simplify=Sad\u0259l\u0259\u015fdirin
Simplify.Syntax=[ <Funksiya> ]\n[ <M\u0259tn> ]
Simplify.SyntaxCAS=[ <Funksiya> ]
Slider=Sürgü
Slope=Toxunan
Slope.Syntax=[ <X\u0259tt> ]
SlopeField=YamacSah\u0259si
SlowPlot.Syntax=[ <Funksiya> ]\n[ <Funksiya>, <M\u0259ntiqi dövrt> ]
Solutions=H\u0259ll
Solutions.Syntax=[ <T\u0259nlik> ]
Solve=H\u0259llEdin
Solve.Syntax=[ <T\u0259nlik> ]
SolveCubic=KubikCoxh\u0259dli
SolveCubic.SyntaxCAS=[ <Cub Çoxh\u0259dli> ]
SolveQuartic=H\u0259lledin
SolveQuartic.SyntaxCAS=[ <Dördd\u0259r\u0259c\u0259li Coxh\u0259dli> ]
Sort=növ
Spearman.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]\n[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
Sphere=Sfera
Sphere.Syntax=[ <N[ qt\u0259'>, <Radius> ]\n[ <Nöqt\u0259>, <Nöqt\u0259> ]
Split.Syntax=[ <M\u0259tn>, <Bölün\u0259c\u0259k m\u0259tnl\u0259rin siyah\u0131s\u0131> ]
StartAnimation=AnimasiyayaBa\u015fla
StartRecord.Syntax=[ ]\n[ <M\u0259ntiqi> ]
StepGraph=QrafD\u0259r\u0259c\u0259si
Stretch=Cazib\u0259
Substitute=\u018fv\u0259z
Sum=C\u0259m
Sum.SyntaxCAS=[ <Siyah\u0131> ]\n[ <\u0130fad\u0259>, <D\u0259yi\u015f\u0259n>, <\u0130lkin qiym\u0259t>, <Son qiym\u0259t> ]
SurdText.Syntax=[ <Nöqt\u0259> ]\n[ <\u018fd\u0259d> ]\n[ <\u018fd\u0259d>, <Siyah\u0131> ]
Surface=S\u0259th
Surface.Syntax=[ <Funksiya>, <Bucaq> ]\n[ <\u018fyri>, <Bucaq>, <X\u0259tt> ]\n[ <\u0130fad\u0259>, <\u0130fad\u0259>, <\u0130fad\u0259>, <1parametrinin d\u0259yi\u015f\u0259ni>, <\u0130lkin Qiym\u0259t>, <Son Qiym\u0259t>, <2 parametrinin d\u0259yi\u015f\u0259ni>, <\u0130lkin Qiym\u0259t>, <Son Qiym\u0259t> ]
TDistribution=Paylama
TDistribution.SyntaxCAS=[ <S\u0259rb\u0259st h\u0259dd>, <D\u0259yi\u015f\u0259nin qiym\u0259ti> ]
TMean2Estimate.Syntax=[ <Nümun\u0259 Veril\u0259nl\u0259rin Siyah\u0131s\u0131 1>, <Nümun\u0259 M\u0259lumatlar\u0131n Siyah\u0131s\u0131 2>, <S\u0259viyy\u0259>, <Boolean Hovuzlu> ]\n[ <Nümun\u0259 Orta 1>, <Nümun\u0259 Standart Sapma 1>, <Nümun\u0259 Ölçüsü 1>, <Nümun\u0259 Orta 2>, <Nümun\u0259 Standart Sapma 2>, <Nümun\u0259 Ölçüsü 2>, <S\u0259viyy\u0259>, <Boolean Havuzlu> ]
Take=Götürm\u0259k
Take.SyntaxCAS=[ <Siyah\u0131>, <Ba\u015flan\u011f\u0131c V\u0259ziyy\u0259ti> ]\n[ <Siyah\u0131>, <Ba\u015flan\u011f\u0131c Mövqeyi>, <S\u0131ra Mövqeyi> ]
Tangent=Tangens
Tangent.SyntaxCAS=[ <\u018fd\u0259d>, <Funksiya> ]\n[ <N\u011fqt\u0259>, <Obyekt> ]
TaylorSeries=TeylorCoxh\u0259dlisi
TaylorSeries.Syntax=[ <Funksiya>, <x-qiym\u0259t>, <sifari\u015fin qiym\u0259ti> ]
Tetrahedron=Tetraedr
Tetrahedron.Syntax=[ <Düzgün Ücbucaq> ]\n[ <Nöqt\u0259>, <Nöqt\u0259t>, <Nöqt\u0259> ]\n[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259> ]
Text=M\u0259tn
TextToUnicode.Syntax=[ "<M\u0259tn>" ]
Textfield=Giri\u015fQutusu
Textfield.Syntax=[ ]\n[ <\u018flaq\u0259li obyekt> ]
TiedRank.Syntax=[ <Siyah\u0131> ]
ToBase.Syntax=[ <Say\u0131>, <\u018fsas> ]
ToComplex.Syntax=[ <Vektor> ]
ToExponential=Xeyli
ToExponential.SyntaxCAS=[ <Kompleks \u018fd\u0259d> ]
ToPoint=Nöqt\u0259y\u0259
ToPoint.Syntax=[ <Kompleks \u018fd\u0259d> ]
ToPolar.Syntax=[ <Kompleks \u018fd\u0259d> ]\n[ <Vektor> ]
ToolImage.Syntax=[ <\u018fd\u0259d> ]\n[ <\u018fd\u0259d>, <Nöqt\u0259> ]\n[ <\u018fd\u0259d>, <Nöqt\u0259>, <Nöqt\u0259> ]
Top.Syntax=[ <\u041a\u0432\u0430\u0434\u0440\u0438\u043a> ]
Translate=T\u0259rcum\u0259Et
Translate.Syntax=[ <Objyekt>, <Vektorr> ]\n[ <Vektor>, <Ba\u015flang\u0131c Nöqt\u0259> ]
Transpose=Transpon\u0259Et
Transpose.Syntax=[ <Matris> ]
TrapezoidalSum.Syntax=[ <Funksiya>, <x-in ilkin qiym\u0259ti>, <x-in son qiym\u0259ti>, <Trapesiyalar\u0131n say\u0131> ]
TravelingSalesman=S\u0259yah\u0259t
TravelingSalesman.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
TriangleCenter=ÜçbucaqM\u0259rk\u0259zi
TriangleCenter.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259>, <Say\u0131> ]
TriangleCurve=\u018fyriÜcbucaq
TriangleCurve.Syntax=[ <Nöqt\u0259>, <Nöqt\u0259>, <Nöqt\u0259>, <T\u0259nlik> ]
Triangular=Üçbucaq
TrigExpand.Syntax=[ <\u0130fad\u0259> ]\n[ <\u0130fad\u0259>, <Tam Funksiya> ]
TrigSimplify.Syntax=[ <\u0130fad\u0259> ]
Trilinear=Üçbucaql\u0131
TurningPoint.Syntax=[ <Coxh\u0259dli> ]
Turtle=T\u0131sba\u011fa
Turtle.Syntax=[ ]
TurtleBack.Syntax=[ <T\u0131sbaga>, <M\u0259saf\u0259> ]
TurtleDown.Syntax=[ <T\u0131sbaga> ]
TurtleForward.Syntax=[ <T\u0131sbaga>, <M\u0259saf\u0259> ]
TurtleLeft=T\u0131sbaga
TurtleLeft.Syntax=[ <T\u0131sbaga>, <Bucaq> ]
TurtleRight.Syntax=[ <T\u0131sbaga>, <Bucaq> ]
TurtleUp.Syntax=[ <T\u0131sbaga> ]
UnicodeToLetter.Syntax=[ <Tam \u018fd\u0259d> ]
UnicodeToText.Syntax=[ <Tam \u018fd\u0259dl\u0259rin Siyah\u0131s\u0131> ]
Uniform=Uniforma
Union=Birg\u0259
Unique=Unikal
Unique.Syntax=[ <Siyah\u0131> ]
UnitOrthogonalVector=VahidPerpendikulyarVektor
UnitOrthogonalVector.Syntax=[ <X\u0259tt> ]\n[ <Parçat> ]\n[ <Vektor> ]
UnitOrthogonalVector.Syntax3D=[ <X\u0259tt> ]\n[ <Parca> ]\n[ <Vector> ]\n[ <Plane> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vektor> ]
UnitVector=VahidVektor
UnitVector.Syntax=[ <Obyekt> ]
UnitVector.SyntaxCAS=[ <Vektor> ]
UpperSum=Yuxar\u0131C\u0259m
UpperSum.Syntax=[ <Funksiya>, <x-in ilkin qiym\u0259ti>, <x-in son qiym\u0259ti>, <Düzbucaql\u0131 say\u0131> ]
Variance=F\u0259rqlilik
Variance.SyntaxCAS=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
Vector=Vektor
Vector.Syntax=[ <Nöqt\u0259> ]\n[ <Baslang\u0131c Nöqt\u0259>, <Son Nöqt\u0259> ]
Vertex=T\u0259p\u0259
VerticalText=\u015eaquliM\u0259tn
VerticalText.Syntax=[ <M\u0259tn> ]\n[ <M\u0259tn>, <Nöqt\u0259> ]
Volume=S\u0259s
Voronoi=Voronoy
Voronoi.Syntax=[ <Xallar\u0131n siyah\u0131s\u0131> ]
Weibull.SyntaxCAS=[ <Forma>, <Miqyas>, <D\u0259yi\u015f\u0259nin qiym\u0259ti> ]
ZProportion2Estimate.Syntax=[ <Nümun\u0259 nisb\u0259t 1>, <Nümun\u0259 ölçüsü 1>, <Nümun\u0259 nisb\u0259t 2>, <Nümun\u0259 ölçüsü 2>, <S\u0259viyy\u0259> ]
Zip.Syntax=[ <\u0130fad\u0259>, <Var1>, <List1>, <Var2>, <List2>, ... ]
ZoomIn=Yax\u0131nla\u015fd\u0131rmaq
ZoomOut=Kicilt
mad.Syntax=[ <Xam M\u0259lumat siyah\u0131s\u0131> ]\n[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <Tezlikl\u0259rin siyah\u0131s\u0131> ]
mean=Dem\u0259li
mean.Syntax=[ <Xam M\u0259lumat siyah\u0131s\u0131> ]\n[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <Tezlikl\u0259rin siyah\u0131s\u0131> ]
mean.SyntaxCAS=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]
nCr.Syntax=[ <Say\u0131 n>, <Say\u0131 r> ]
stdev.Syntax=[ <Xam M\u0259lumat siyah\u0131s\u0131> ]\n[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131>, <Tezlikl\u0259rin siyah\u0131s\u0131> ]
stdevp.Syntax=[ <Veril\u0259nl\u0259r Siyah\u0131s\u0131> ]\n[ <saylar siyah\u0131s\u0131>, <Tezlikl\u0259r siyah\u0131s\u0131> ]
stdevp.SyntaxCAS=[ <Nömr\u0259l\u0259rin siyah\u0131s\u0131> ]